#ifndef SERVER_H
#define SERVER_H

#include <QObject>
#include <QHttpServer>
#include <QSqlDatabase>
#include <QSqlQuery>
#include <optional>
#include "../config.h"

// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –∫–ª—ñ—î–Ω—Ç–∞
struct ClientDBParams {
    QString server;
    int port;
    QString database;
    QString username;
    QString password;
};

class Server : public QObject {
    Q_OBJECT
public:
    explicit Server(Config *config, QObject *parent = nullptr);
    void start();  // üîπ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞

private:
    QHttpServer httpServer;
    int port;
    Config *config;  // üîπ –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é
    QSqlDatabase db;  // üîπ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö

    bool connectToDatabase();  // üîπ –ú–µ—Ç–æ–¥ –¥–ª—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏
    void setupRoutes();  // üîπ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤—Å—ñ—Ö –º–∞—Ä—à—Ä—É—Ç—ñ–≤

    QHttpServerResponse handleStatus();                  // üîπ –û–±—Ä–æ–±–∫–∞ `/status`
    QHttpServerResponse handleData();                    // üîπ –û–±—Ä–æ–±–∫–∞ `/data`
    QHttpServerResponse handleDataById(int clientId);    // üîπ –û–±—Ä–æ–±–∫–∞ `/data/<id>`
    QHttpServerResponse handleTerminalInfo(const QHttpServerRequest &request); ///terminal_info
    std::optional<ClientDBParams> getClientDBParams(int clientID);
};

#endif // SERVER_H
